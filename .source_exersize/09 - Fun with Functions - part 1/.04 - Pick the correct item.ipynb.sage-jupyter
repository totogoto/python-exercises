{"kernelspec":{"display_name":"Python 3 (system-wide)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}}
{"cell_type":"code","execution_count":9,"metadata":{"trusted":true},"outputs":[],"source":"from worlds.levels import get_robo"}
{"cell_type":"markdown","metadata":{"hideCode":false,"hidePrompt":true},"source":"# Pick the right item\n\nHelp otto pick the right items from row 2. It should match what it kept by master in Row1\n\n\n\n### What you need to know\n- The functions move(), turn_left() to move and turn otto around\n- calling move() in front of a wall causes otto to crash into the wall and the program errors out. Please take care of otto ðŸ¤—\n- The function report(message) to report any message. The message needs to be a python string\n- The function take() will pick up the object in the current cell. Otto needs to pick the correct objects and leave the rest in place\n- The function object_here() returns the object in the current cell (in this case \"apple\" on cells with apples)\n- The function wall_in_front() returns True if Otto is facing a wall, False otherwise"}
{"cell_type":"code","execution_count":18,"metadata":{"trusted":true},"outputs":[],"source":"def turn_right(bot):\n    for x in range(3):\n        bot.turn_left()\n        \n# Your code here - \n# fill in the arguments correctly before \n# writing code for the function\ndef pick_the_item():\n    # check all the items and pick the one that matches!\n    pass\n"}
{"cell_type":"code","execution_count":19,"metadata":{"trusted":true},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d67323563959402e9ae475050bceaf3d","version_major":2,"version_minor":0},"text/plain":"Maze()"},"metadata":{},"output_type":"display_data"},{"ename":"TypeError","evalue":"pick_the_item() takes 0 positional arguments but 2 were given","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_1174/1279142191.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mbot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmove\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mturn_right\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbot\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mpick_the_item\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mitem_to_pick\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mbot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcheck\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: pick_the_item() takes 0 positional arguments but 2 were given"]}],"source":"#*****************************\n#  DO NOT CHANGE THIS CELL   *\n#*****************************\n\nbot =  get_robo('params')\n\nbot.move()\nitem_to_pick = bot.object_here()\nbot.turn_left()\nbot.move()\nturn_right(bot)\npick_the_item(bot, item_to_pick)\n    \nbot.check()"}
{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":""}