{"kernelspec":{"display_name":"Python 3 (system-wide)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}}
{"cell_type":"code","execution_count":5,"metadata":{"trusted":true},"outputs":[],"source":"from worlds.levels import get_robo"}
{"cell_type":"markdown","metadata":{"hideCode":false,"hidePrompt":true},"source":"# Pick the correct items - Part 2\n\n### What you need to know\n- The functions move(), turn_left() to move and turn otto around\n- calling move() in front of a wall causes otto to crash into the wall and the program errors out. Please take care of otto ðŸ¤—\n- The function report(message) to report any message. The message needs to be a python string\n- The function take() will pick up the object in the current cell. Otto needs to pick the correct objects and leave the rest in place\n- The function object_here() returns the object in the current cell (in this case \"apple\" on cells with apples)\n- The function wall_in_front() returns True if Otto is facing a wall, False otherwise"}
{"cell_type":"code","execution_count":9,"metadata":{"trusted":true},"outputs":[],"source":"def turn_right(bot):\n    for x in range(3):\n        bot.turn_left()\n    \ndef u_turn(bot):\n    bot.turn_left()\n    bot.turn_left()\n        \n#your code here\ndef pick_the_items(bot, items):\n    pass\n"}
{"cell_type":"code","execution_count":10,"metadata":{"trusted":true},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0657325d4d9a4c9aacd51dd7a1290c59","version_major":2,"version_minor":0},"text/plain":"Maze()"},"metadata":{},"output_type":"display_data"},{"data":{"text/html":"<text style=color:blue>ðŸ’¬ Need to pick ['strawberry', 'tulip', 'star']</text>","text/plain":"<IPython.core.display.HTML object>"},"metadata":{},"output_type":"display_data"},{"data":{"text/html":"<text style=color:red>âœ— Expected: Final Position: 9,2</text>","text/plain":"<IPython.core.display.HTML object>"},"metadata":{},"output_type":"display_data"},{"data":{"text/html":"<text style=color:red>âœ— Expected: Pick object strawberry at: 2,2</text>","text/plain":"<IPython.core.display.HTML object>"},"metadata":{},"output_type":"display_data"},{"data":{"text/html":"<text style=color:red>âœ— Expected: Pick object star at: 3,2</text>","text/plain":"<IPython.core.display.HTML object>"},"metadata":{},"output_type":"display_data"},{"data":{"text/html":"<text style=color:red>âœ— Expected: Pick object tulip at: 7,2</text>","text/plain":"<IPython.core.display.HTML object>"},"metadata":{},"output_type":"display_data"}],"source":"#*****************************\n#  DO NOT CHANGE THIS CELL   *\n#*****************************\n\nbot =  get_robo('params-2')\n\nitems = [0,0,0]\nfor i in range(3): \n    bot.move()\n    items[i] = bot.object_here()\nbot.report(f\"Need to pick {items}\")\n\nu_turn(bot)\nbot.move(2)\nturn_right(bot)\nbot.move()\nturn_right(bot)\npick_the_items(bot, items)\n\nbot.check()"}
{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":""}