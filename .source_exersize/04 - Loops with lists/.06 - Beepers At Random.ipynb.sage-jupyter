{"kernelspec":{"display_name":"Python 3 (system-wide)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}}
{"cell_type":"code","execution_count":3,"id":"59376fbd","metadata":{"trusted":true},"outputs":[],"source":"from worlds.levels import get_robo"}
{"cell_type":"markdown","id":"b519fadc","metadata":{},"source":"### Beepers at random\n\nBeepers are placed at random locations ( one each per column )\n\nHint: you can create lists to hold both counts and positions! \n\n### What you need to know\n\n- The function `move()` to move.\n- calling `move()` in front of a wall causes otto to crash into the wall and the program errors out. Please take care of otto ðŸ¤—\n- The function `turn_left` will rotate left by 90 degrees.\n- `for` : A for loop is used for iterating over a sequence.\n- `range(start, stop, step)` : The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and stops before a specified number.\n\n- `object_here`: Check and return the name of the object in the current cell\n- `wall_in_front`: Checks if there is a wall in front of the robot.\n- The function `take()` will pick up the object in the current cell. Otto needs to pick the correct objects and leave the rest in place"}
{"cell_type":"code","execution_count":4,"id":"c10771dc-ddfc-4f30-84f8-ce8fc5c86afe","metadata":{"trusted":true},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"00b9e6a196224eefa21e591dadbc6de0","version_major":2,"version_minor":0},"text/plain":"Maze()"},"metadata":{},"output_type":"display_data"}],"source":"bot = get_robo('beepers_at_random')\n\n\nbot.check()"}
{"cell_type":"code","execution_count":null,"id":"c5ba5717-a8b3-4a1c-9169-86a5ed2ff87e","metadata":{"trusted":true},"outputs":[],"source":""}