{"kernelspec":{"display_name":"Python 3 (system-wide)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}}
{"cell_type":"code","execution_count":1,"metadata":{"trusted":true},"outputs":[],"source":"from worlds.levels import get_robo"}
{"cell_type":"markdown","metadata":{},"source":"# No Stars please!\n\nHelp otto to Pick up all the Fruits. Fruits are mixed with stars (object type `\"star\"`).\n\n\n### What you need to know\n\n- The functions `move()` to move.\n- calling `move()` in front of a wall causes otto to crash into the wall and the program errors out. Please take care of otto ðŸ¤—\n- The function `take()` will pick up the object in the current cell. Otto needs to pick the correct objects and leave the rest in place\n- The function `object_here()` returns the object in the current cell (in this case \"banana\" on cells with banana)\n- The function `at_goal()` returns True, if house is on the current cell.\n\n- How to use `not` and `and` operator."}
{"cell_type":"code","execution_count":2,"metadata":{"trusted":true},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"03152dd70a23412594c935770694d890","version_major":2,"version_minor":0},"text/plain":"Maze()"},"metadata":{},"output_type":"display_data"},{"data":{"text/html":"<text style=color:blue>ðŸ’¬ Picking up fruits</text>","text/plain":"<IPython.core.display.HTML object>"},"metadata":{},"output_type":"display_data"},{"data":{"text/html":"<text style=color:red>âœ— Expected: Final Position: 10,1</text>","text/plain":"<IPython.core.display.HTML object>"},"metadata":{},"output_type":"display_data"},{"data":{"text/html":"<text style=color:red>âœ— Expected: Picked 4 fruits.</text>","text/plain":"<IPython.core.display.HTML object>"},"metadata":{},"output_type":"display_data"}],"source":"bot = get_robo(\"not_star\")\nbot.report(f'Picking up fruits')\n#code here\n\n\n#check the solution\nbot.check()"}
{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":""}